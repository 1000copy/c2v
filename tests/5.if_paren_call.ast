TranslationUnitDecl 0x15783ea08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15783f8f8 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15783efa0 '__int128'
|-TypedefDecl 0x15783f968 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15783efc0 'unsigned __int128'
|-TypedefDecl 0x1578d76c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1578d7480 'struct __NSConstantString_tag'
|   `-Record 0x1578d7400 '__NSConstantString_tag'
|-TypedefDecl 0x1578d7730 <<invalid sloc>> <invalid sloc> implicit __SVInt8_t '__SVInt8_t'
| `-BuiltinType 0x15783f220 '__SVInt8_t'
|-TypedefDecl 0x1578d7798 <<invalid sloc>> <invalid sloc> implicit __SVInt16_t '__SVInt16_t'
| `-BuiltinType 0x15783f240 '__SVInt16_t'
|-TypedefDecl 0x1578d7800 <<invalid sloc>> <invalid sloc> implicit __SVInt32_t '__SVInt32_t'
| `-BuiltinType 0x15783f260 '__SVInt32_t'
|-TypedefDecl 0x1578d7868 <<invalid sloc>> <invalid sloc> implicit __SVInt64_t '__SVInt64_t'
| `-BuiltinType 0x15783f280 '__SVInt64_t'
|-TypedefDecl 0x1578d78d0 <<invalid sloc>> <invalid sloc> implicit __SVUint8_t '__SVUint8_t'
| `-BuiltinType 0x15783f2a0 '__SVUint8_t'
|-TypedefDecl 0x1578d7938 <<invalid sloc>> <invalid sloc> implicit __SVUint16_t '__SVUint16_t'
| `-BuiltinType 0x15783f2c0 '__SVUint16_t'
|-TypedefDecl 0x1578d79a0 <<invalid sloc>> <invalid sloc> implicit __SVUint32_t '__SVUint32_t'
| `-BuiltinType 0x15783f2e0 '__SVUint32_t'
|-TypedefDecl 0x1578d7a08 <<invalid sloc>> <invalid sloc> implicit __SVUint64_t '__SVUint64_t'
| `-BuiltinType 0x15783f300 '__SVUint64_t'
|-TypedefDecl 0x1578d7a70 <<invalid sloc>> <invalid sloc> implicit __SVFloat16_t '__SVFloat16_t'
| `-BuiltinType 0x15783f320 '__SVFloat16_t'
|-TypedefDecl 0x1578d7ad8 <<invalid sloc>> <invalid sloc> implicit __SVFloat32_t '__SVFloat32_t'
| `-BuiltinType 0x15783f340 '__SVFloat32_t'
|-TypedefDecl 0x1578d7b40 <<invalid sloc>> <invalid sloc> implicit __SVFloat64_t '__SVFloat64_t'
| `-BuiltinType 0x15783f360 '__SVFloat64_t'
|-TypedefDecl 0x1578d7ba8 <<invalid sloc>> <invalid sloc> implicit __SVBFloat16_t '__SVBFloat16_t'
| `-BuiltinType 0x15783f380 '__SVBFloat16_t'
|-TypedefDecl 0x1578d7c10 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x2_t '__clang_svint8x2_t'
| `-BuiltinType 0x15783f3a0 '__clang_svint8x2_t'
|-TypedefDecl 0x1578d7c78 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x2_t '__clang_svint16x2_t'
| `-BuiltinType 0x15783f3c0 '__clang_svint16x2_t'
|-TypedefDecl 0x1578d7ce0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x2_t '__clang_svint32x2_t'
| `-BuiltinType 0x15783f3e0 '__clang_svint32x2_t'
|-TypedefDecl 0x1578d7d48 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x2_t '__clang_svint64x2_t'
| `-BuiltinType 0x15783f400 '__clang_svint64x2_t'
|-TypedefDecl 0x1578d7db0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x2_t '__clang_svuint8x2_t'
| `-BuiltinType 0x15783f420 '__clang_svuint8x2_t'
|-TypedefDecl 0x1578d7e18 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x2_t '__clang_svuint16x2_t'
| `-BuiltinType 0x15783f440 '__clang_svuint16x2_t'
|-TypedefDecl 0x1578d7e80 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x2_t '__clang_svuint32x2_t'
| `-BuiltinType 0x15783f460 '__clang_svuint32x2_t'
|-TypedefDecl 0x1578d7ee8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x2_t '__clang_svuint64x2_t'
| `-BuiltinType 0x15783f480 '__clang_svuint64x2_t'
|-TypedefDecl 0x1578d7f50 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x2_t '__clang_svfloat16x2_t'
| `-BuiltinType 0x15783f4a0 '__clang_svfloat16x2_t'
|-TypedefDecl 0x1578d7fb8 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x2_t '__clang_svfloat32x2_t'
| `-BuiltinType 0x15783f4c0 '__clang_svfloat32x2_t'
|-TypedefDecl 0x1578d8020 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x2_t '__clang_svfloat64x2_t'
| `-BuiltinType 0x15783f4e0 '__clang_svfloat64x2_t'
|-TypedefDecl 0x1578d8088 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x2_t '__clang_svbfloat16x2_t'
| `-BuiltinType 0x15783f500 '__clang_svbfloat16x2_t'
|-TypedefDecl 0x1578d80f0 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x3_t '__clang_svint8x3_t'
| `-BuiltinType 0x15783f520 '__clang_svint8x3_t'
|-TypedefDecl 0x1578d8158 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x3_t '__clang_svint16x3_t'
| `-BuiltinType 0x15783f540 '__clang_svint16x3_t'
|-TypedefDecl 0x1578d81c0 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x3_t '__clang_svint32x3_t'
| `-BuiltinType 0x15783f560 '__clang_svint32x3_t'
|-TypedefDecl 0x1578d8228 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x3_t '__clang_svint64x3_t'
| `-BuiltinType 0x15783f580 '__clang_svint64x3_t'
|-TypedefDecl 0x1578d8290 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x3_t '__clang_svuint8x3_t'
| `-BuiltinType 0x15783f5a0 '__clang_svuint8x3_t'
|-TypedefDecl 0x1578d82f8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x3_t '__clang_svuint16x3_t'
| `-BuiltinType 0x15783f5c0 '__clang_svuint16x3_t'
|-TypedefDecl 0x1578d8360 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x3_t '__clang_svuint32x3_t'
| `-BuiltinType 0x15783f5e0 '__clang_svuint32x3_t'
|-TypedefDecl 0x1578dac00 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x3_t '__clang_svuint64x3_t'
| `-BuiltinType 0x15783f600 '__clang_svuint64x3_t'
|-TypedefDecl 0x1578dac68 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x3_t '__clang_svfloat16x3_t'
| `-BuiltinType 0x15783f620 '__clang_svfloat16x3_t'
|-TypedefDecl 0x1578dacd0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x3_t '__clang_svfloat32x3_t'
| `-BuiltinType 0x15783f640 '__clang_svfloat32x3_t'
|-TypedefDecl 0x1578dad38 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x3_t '__clang_svfloat64x3_t'
| `-BuiltinType 0x15783f660 '__clang_svfloat64x3_t'
|-TypedefDecl 0x1578dada0 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x3_t '__clang_svbfloat16x3_t'
| `-BuiltinType 0x15783f680 '__clang_svbfloat16x3_t'
|-TypedefDecl 0x1578dae08 <<invalid sloc>> <invalid sloc> implicit __clang_svint8x4_t '__clang_svint8x4_t'
| `-BuiltinType 0x15783f6a0 '__clang_svint8x4_t'
|-TypedefDecl 0x1578dae70 <<invalid sloc>> <invalid sloc> implicit __clang_svint16x4_t '__clang_svint16x4_t'
| `-BuiltinType 0x15783f6c0 '__clang_svint16x4_t'
|-TypedefDecl 0x1578daed8 <<invalid sloc>> <invalid sloc> implicit __clang_svint32x4_t '__clang_svint32x4_t'
| `-BuiltinType 0x15783f6e0 '__clang_svint32x4_t'
|-TypedefDecl 0x1578daf40 <<invalid sloc>> <invalid sloc> implicit __clang_svint64x4_t '__clang_svint64x4_t'
| `-BuiltinType 0x15783f700 '__clang_svint64x4_t'
|-TypedefDecl 0x1578dafa8 <<invalid sloc>> <invalid sloc> implicit __clang_svuint8x4_t '__clang_svuint8x4_t'
| `-BuiltinType 0x15783f720 '__clang_svuint8x4_t'
|-TypedefDecl 0x1578db010 <<invalid sloc>> <invalid sloc> implicit __clang_svuint16x4_t '__clang_svuint16x4_t'
| `-BuiltinType 0x15783f740 '__clang_svuint16x4_t'
|-TypedefDecl 0x1578db078 <<invalid sloc>> <invalid sloc> implicit __clang_svuint32x4_t '__clang_svuint32x4_t'
| `-BuiltinType 0x15783f760 '__clang_svuint32x4_t'
|-TypedefDecl 0x1578db0e0 <<invalid sloc>> <invalid sloc> implicit __clang_svuint64x4_t '__clang_svuint64x4_t'
| `-BuiltinType 0x15783f780 '__clang_svuint64x4_t'
|-TypedefDecl 0x1578db148 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat16x4_t '__clang_svfloat16x4_t'
| `-BuiltinType 0x15783f7a0 '__clang_svfloat16x4_t'
|-TypedefDecl 0x1578db1b0 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat32x4_t '__clang_svfloat32x4_t'
| `-BuiltinType 0x15783f7c0 '__clang_svfloat32x4_t'
|-TypedefDecl 0x1578db218 <<invalid sloc>> <invalid sloc> implicit __clang_svfloat64x4_t '__clang_svfloat64x4_t'
| `-BuiltinType 0x15783f7e0 '__clang_svfloat64x4_t'
|-TypedefDecl 0x1578db280 <<invalid sloc>> <invalid sloc> implicit __clang_svbfloat16x4_t '__clang_svbfloat16x4_t'
| `-BuiltinType 0x15783f800 '__clang_svbfloat16x4_t'
|-TypedefDecl 0x1578db2e8 <<invalid sloc>> <invalid sloc> implicit __SVBool_t '__SVBool_t'
| `-BuiltinType 0x15783f820 '__SVBool_t'
|-TypedefDecl 0x1578db390 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1578db340 'char *'
|   `-BuiltinType 0x15783eaa0 'char'
|-TypedefDecl 0x1578db400 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1578db340 'char *'
|   `-BuiltinType 0x15783eaa0 'char'
`-FunctionDecl 0x1578db4b8 </Users/alex/code/c2v/tests/5.if_paren_call.c:1:1, line:18:1> line:1:1 main 'int ()'
  `-CompoundStmt 0x1578fe648 <col:8, line:18:1>
    |-DeclStmt 0x1578db620 <line:2:2, col:7>
    | `-VarDecl 0x1578db5b8 <col:2, col:6> col:6 used a 'int'
    |-IfStmt 0x1578db980 <line:3:2, line:5:2>
    | |-ParenExpr 0x1578db870 <line:3:6, col:31> 'int'
    | | `-BinaryOperator 0x1578db850 <col:7, col:30> 'int' '='
    | |   |-DeclRefExpr 0x1578db638 <col:7> 'int' lvalue Var 0x1578db5b8 'a' 'int'
    | |   `-CallExpr 0x1578db810 <col:11, col:30> 'int'
    | |     |-ImplicitCastExpr 0x1578db7f8 <col:11> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x1578db730 <col:11> 'int ()' Function 0x1578db680 'puts' 'int ()'
    | |     `-ImplicitCastExpr 0x1578db838 <col:17> 'char *' <ArrayToPointerDecay>
    | |       `-StringLiteral 0x1578db790 <col:17> 'char [12]' lvalue "Hello World"
    | `-CompoundStmt 0x1578db968 <col:34, line:5:2>
    |   `-CallExpr 0x1578db928 <line:4:3, col:15> 'int'
    |     |-ImplicitCastExpr 0x1578db910 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1578db890 <col:3> 'int ()' Function 0x1578db680 'puts' 'int ()'
    |     `-ImplicitCastExpr 0x1578db950 <col:9> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x1578db8f0 <col:9> 'char [5]' lvalue "noes"
    |-IfStmt 0x1578dbb88 <line:6:2, line:8:2>
    | |-BinaryOperator 0x1578dbab8 <line:6:6, col:36> 'int' '!='
    | | |-ParenExpr 0x1578dba78 <col:6, col:31> 'int'
    | | | `-BinaryOperator 0x1578dba58 <col:7, col:30> 'int' '='
    | | |   |-DeclRefExpr 0x1578db998 <col:7> 'int' lvalue Var 0x1578db5b8 'a' 'int'
    | | |   `-CallExpr 0x1578dba18 <col:11, col:30> 'int'
    | | |     |-ImplicitCastExpr 0x1578dba00 <col:11> 'int (*)()' <FunctionToPointerDecay>
    | | |     | `-DeclRefExpr 0x1578db9b8 <col:11> 'int ()' Function 0x1578db680 'puts' 'int ()'
    | | |     `-ImplicitCastExpr 0x1578dba40 <col:17> 'char *' <ArrayToPointerDecay>
    | | |       `-StringLiteral 0x1578db9d8 <col:17> 'char [12]' lvalue "Hello World"
    | | `-IntegerLiteral 0x1578dba98 <col:36> 'int' 0
    | `-CompoundStmt 0x1578dbb70 <col:39, line:8:2>
    |   `-CallExpr 0x1578dbb30 <line:7:3, col:15> 'int'
    |     |-ImplicitCastExpr 0x1578dbb18 <col:3> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1578dbad8 <col:3> 'int ()' Function 0x1578db680 'puts' 'int ()'
    |     `-ImplicitCastExpr 0x1578dbb58 <col:9> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x1578dbaf8 <col:9> 'char [5]' lvalue "noes"
    |-DeclStmt 0x1578fe468 <line:9:2, col:13>
    | `-VarDecl 0x1578fe400 <col:2, col:6> col:6 used cacatua 'int'
    `-IfStmt 0x1578fe630 <line:10:2, line:12:2>
      |-ParenExpr 0x1578fe560 <line:10:6, col:37> 'int'
      | `-BinaryOperator 0x1578fe540 <col:7, col:36> 'int' '='
      |   |-DeclRefExpr 0x1578fe480 <col:7> 'int' lvalue Var 0x1578fe400 'cacatua' 'int'
      |   `-CallExpr 0x1578fe500 <col:17, col:36> 'int'
      |     |-ImplicitCastExpr 0x1578fe4e8 <col:17> 'int (*)()' <FunctionToPointerDecay>
      |     | `-DeclRefExpr 0x1578fe4a0 <col:17> 'int ()' Function 0x1578db680 'puts' 'int ()'
      |     `-ImplicitCastExpr 0x1578fe528 <col:23> 'char *' <ArrayToPointerDecay>
      |       `-StringLiteral 0x1578fe4c0 <col:23> 'char [12]' lvalue "Hello World"
      `-CompoundStmt 0x1578fe618 <col:40, line:12:2>
        `-CallExpr 0x1578fe5d8 <line:11:3, col:15> 'int'
          |-ImplicitCastExpr 0x1578fe5c0 <col:3> 'int (*)()' <FunctionToPointerDecay>
          | `-DeclRefExpr 0x1578fe580 <col:3> 'int ()' Function 0x1578db680 'puts' 'int ()'
          `-ImplicitCastExpr 0x1578fe600 <col:9> 'char *' <ArrayToPointerDecay>
            `-StringLiteral 0x1578fe5a0 <col:9> 'char [5]' lvalue "noes"
